{"version":3,"sources":["assets/my-face.jpg","components/Publications.js","components/SelfBlock.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Publications","publications","map","value","_","react_default","a","createElement","Publications_Publication","title","local_ref","authors","link","anthology_link","conf","conference","Component","Publication","className","href","this","props","SelfBlock","src","face","Header","Link","to","Footer","App","HashRouter","components_Header","Route","exact","path","component","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b92ac40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/my-face.62816157.jpg\";","import React, { Component, Text } from 'react';\nimport publications from './../assets/publications.json';\nimport \"../css/publications.css\"\n\nclass Publications extends Component {\n    render() {\n        var li = publications.publications.map((value, _) => {\n            return (\n                <Publication\n                    title={value.title}\n                    local_ref={value.local_ref}\n                    authors={value.authors}\n                    link={value.anthology_link}\n                    conf={value.conference}\n                />\n            )\n        });\n        return li\n    }\n}\n\nclass Publication extends Component {\n    render() {\n        return (\n            <div className=\"pub-item\">\n                <div className=\"pub-title\">\n                    <a className=\"pub-a\" href=\"https://aclanthology.info/papers/D18-1126/d18-1126\">{this.props.title}</a>\n                </div>\n                <div className=\"pub-author-conf\">\n                        {this.props.authors}, {this.props.conf}\n                </div>\n                <div className=\"pub-links\">\n                    <a className=\"pub-a\" href=\"http://aclweb.org/anthology/D18-1126\">pdf</a>\n                    <a className=\"pub-a\" href=\"https://aclanthology.info/papers/D18-1126/d18-1126.bib\">BibTex</a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Publications;","import React, { Component } from 'react';\nimport face from '../assets/my-face.jpg'\nimport '../css/self-block.css';\n\nclass SelfBlock extends Component {\n  render() {\n    return (\n      <div className=\"Self-Block\">\n        <div className=\"Intro\">\n          <div className=\"face\">\n            <img src={face} className=\"face-img\"/>\n          </div>\n          <div className=\"face-text\">\n          Every day is taco ipsum tuesday. Say taco one more time. Give me all your tacos. How do you feel about hard shelled tacos? Flour or corn tortillas? Itâ€™s a wonderful morning for breakfast tacos. Pico de gallo, on the side please. Fish tacos: lettuce or cabbage, pico de gallo, avocado and a sour cream or citrus/mayonnaise sauce, all placed on top of a corn or flour tortilla. Ooh, with diced onions and a pinch of cilantro. Burritos are very tasty. Itâ€™s taco Tuesday Monday. Make it a double there pal. I think Iâ€™ve overdosed on tacos. Ooh, with diced onions and a pinch of cilantro.\n          </div>\n        </div>\n        <div className=\"Subsequent-Text\">\n          <div className=\"useless\">\n            Side of rice and beans, please. Itâ€™s taco time all the time. 50 cent tacos! Iâ€™ll take 30. These tacos are lit ðŸ”¥. How do you feel about hard shelled tacos? Tacos dorados called flautas, or taquitos, for which the tortillas are filled with pre-cooked shredded chicken, beef or barbacoa, rolled into an elongated cylinder and deep-fried until crisp. If you were a taco, would you eat yourself? Um, Tabasco? No thanks, do you have any Cholula? Itâ€™s long been rumored that the chupacabra is really just a crazed man whoâ€™s local taco shop went out of business.\n          </div>\n          <div className=\"useless\">\n            Black or pinto beans? Tacos Al pastor/De Adobada are made of thin pork steaks seasoned with adobo seasoning, then skewered and overlapped on one another on a vertical rotisserie cooked and flame-broiled as it spins. Can you put some peppers and onions on that? Give me all your tacos. Fish tacos: lettuce or cabbage, pico de gallo, avocado and a sour cream or citrus/mayonnaise sauce, all placed on top of a corn or flour tortilla. These tacos are lit ðŸ”¥\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SelfBlock;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport '../css/header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n            <div className=\"header-name\">\n                David Mueller\n            </div>\n            <div className=\"header-links\">\n                <div className=\"header-link\">\n                    <Link className=\"head-a\" to=\"/\">About</Link>\n                </div>\n                <div className=\"header-link\">\n                    <Link className=\"head-a\" to=\"/publications\">My One Publication</Link>\n                </div>\n                <div className=\"header-link\">\n                    <Link className=\"head-a\" to=\"/blog\">Blog</Link>\n                </div>\n                <div className=\"header-link\">\n                    <Link className=\"head-a\" to=\"/pictures\">Pics</Link>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport \"../css/footer.css\"\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <div className=\"footer-link\">\n                    <a className=\"foot-a\" href=\"https://twitter.com/_dave_andy_m\">\n                        Twitter\n                    </a>\n                </div>\n                <div className=\"footer-link\">\n                    <a className=\"foot-a\" href=\"https://github.com/davidandym\">\n                        Github\n                    </a>\n                </div>\n                <div className=\"footer-link\">\n                    <a className=\"foot-a\" href=\"https://www.linkedin.com/in/davidandym/\">\n                        LinkedIn\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Publications from './components/Publications';\nimport SelfBlock from './components/SelfBlock';\nimport Header from './components/Header';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n        <Header/>\n        <div className=\"main-content\">\n          <Route exact path=\"/\" component={SelfBlock}/>\n          <Route path=\"/publications\" component={Publications}/>\n        </div>\n        <Footer/>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}